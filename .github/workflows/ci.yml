name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE*'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.70.0  # MSRV
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          eventrs/target
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.rust }}-
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      working-directory: ./eventrs
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings -A dead_code -A unused_imports -A unused_variables
      working-directory: ./eventrs
    
    - name: Build library
      run: cargo build --lib --all-features
      working-directory: ./eventrs
    
    - name: Run lib tests
      run: cargo test --lib --all-features
      working-directory: ./eventrs
    
    - name: Run doc tests
      run: cargo test --doc --all-features
      working-directory: ./eventrs
    
    - name: Test examples compile
      run: cargo check --examples --all-features
      working-directory: ./eventrs

  bench:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          eventrs/target
        key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check benchmarks compile
      run: cargo check --benches --all-features
      working-directory: ./eventrs
    
    - name: Run benchmarks (dry run)
      run: cargo bench --all-features -- --test
      working-directory: ./eventrs

  features:
    name: Feature Combinations
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          eventrs/target
        key: ${{ runner.os }}-cargo-features-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Test default features
      run: cargo test --lib
      working-directory: ./eventrs
    
    - name: Test no default features
      run: cargo test --lib --no-default-features
      working-directory: ./eventrs
    
    - name: Test async feature only
      run: cargo test --lib --no-default-features --features async
      working-directory: ./eventrs
    
    - name: Test metrics feature only
      run: cargo test --lib --no-default-features --features metrics
      working-directory: ./eventrs
    
    - name: Test all features
      run: cargo test --lib --all-features
      working-directory: ./eventrs

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit
      working-directory: ./eventrs

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          eventrs/target
        key: ${{ runner.os }}-cargo-perf-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run performance regression tests
      run: cargo test --test simple_performance --release
      working-directory: ./eventrs
    
    - name: Check performance benchmarks
      run: cargo bench --all-features -- --test
      working-directory: ./eventrs

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          eventrs/target
        key: ${{ runner.os }}-cargo-docs-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check documentation
      run: cargo doc --all-features --no-deps --document-private-items
      working-directory: ./eventrs
      env:
        RUSTDOCFLAGS: -D warnings -A rustdoc::private_doc_tests
    
    - name: Test documentation examples
      run: cargo test --doc --all-features
      working-directory: ./eventrs

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          eventrs/target
        key: ${{ runner.os }}-cargo-integration-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run all examples
      run: |
        for example in examples/*.rs; do
          example_name=$(basename "$example" .rs)
          echo "Running example: $example_name"
          cargo run --example "$example_name" --all-features
        done
      working-directory: ./eventrs
    
    - name: Test workspace
      run: cargo test --workspace --all-features
      working-directory: ./eventrs
    
    - name: Check all targets
      run: cargo check --all-targets --all-features
      working-directory: ./eventrs